# Variables 


4c.l file 

%{
#include<stdio.h>
#include "y.tab.h"
%}

%%
new return NEW;
"[" return OPEN_SQ;
"]" return CLOSE_SQ;
"=" return EQ;
"," return COMMA;
"_" return UD;
(["\t"])+ return WS;
[a-zA-Z]+[a-zA-Z0-9]* return ID;
[0-9]+ return DIGIT;
\n return 0;
%%



4c.y file 

%{
#include<stdio.h>
#include "y.tab.h"
%}
%token BUILTIN UD WS ID OPEN_SQ CLOSE_SQ EQ NEW SC COMMA DIGIT 
%%
start :  varlist WS varlist  {printf(" NOT Valid Declaration \n");} 
        |  varlist UD DIGIT  {printf("Valid Declaration \n");}
        |  varlist  {printf("Valid Declaration \n");}
        |  varlist UD varlist {printf("Valid Declaration \n");}
        | varlist : varlist COMMA ID | ID;
%%

int yywrap()
{ return 1;
}

int main()
{
	printf("\nEnter variable declaration  :  ");
	yyparse();
	return 1;
}

int yyerror(char *s)
{
	fprintf(stderr,"s\n",s);
	return 1;
}


Compile command 
lex 4a.l
yacc -d 4a.y
cc lex.yy.c  y.tab.c
./a.out


or 

bison -d 4a.y
flex 4a.l
gcc -o 4a 4a.tab.yy.c -lfl -lm
./4a
